# URL ： http://localhost:8080/Gradle___org_springframework___spring_mymvc_5_2_9_BUILD_SNAPSHOT_war/param
  controller ： spring-mymvc/src/main/java/com/mashibing/controller/initBinder/InitBinderController.java

1. spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java （ 这地方开始 处理其他类型的请求 ，接下来会走到 doGet() 方法里面 ）
        // 处理其他类型的请求
        super.service(request, response);


2. spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java （ processRequest(request, response); 点进去 ）
        @Override
        protected final void doGet(HttpServletRequest request, HttpServletResponse response)
        		throws ServletException, IOException {

        	processRequest(request, response);
        }


3. spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java （ doService(request, response); 点进去 ）
        // 执行真正的逻辑
        doService(request, response);


4. spring-webmvc/src/main/java/org/springframework/web/servlet/FrameworkServlet.java （ 点进去 ）
	    protected abstract void doService(HttpServletRequest request, HttpServletResponse response)
			    throws Exception;


5. spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java （ doDispatch(request, response); 点进去 ）
        // 执行请求的分发
        doDispatch(request, response);


6. spring-webmvc/src/main/java/org/springframework/web/servlet/DispatcherServlet.java （ HandlerAdapter ha = getHandlerAdapter(mappedHandler.getHandler()); 点进去 ）
        // Actually invoke the handler.
        // 真正的调用handler方法，也就是执行对应的方法，并返回视图
        mv = ha.handle(processedRequest, response, mappedHandler.getHandler());


7. spring-webmvc/src/main/java/org/springframework/web/servlet/HandlerAdapter.java （ 点进去 ）
        @Nullable
        ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception;


8. spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java （ return handleInternal(request, response, (HandlerMethod) handler); 点进去 ）
        /**
         * This implementation expects the handler to be an {@link HandlerMethod}.
         */
        @Override
        @Nullable
        public final ModelAndView handle(HttpServletRequest request, HttpServletResponse response, Object handler)
        		throws Exception {

        	return handleInternal(request, response, (HandlerMethod) handler);
        }


9. spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/AbstractHandlerMethodAdapter.java （ 点进去 ）
        @Nullable
        protected abstract ModelAndView handleInternal(HttpServletRequest request,
        		HttpServletResponse response, HandlerMethod handlerMethod) throws Exception;


10. spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java （ mav = invokeHandlerMethod(request, response, handlerMethod); 点进去 ）
        // No synchronization on session demanded at all...
        mav = invokeHandlerMethod(request, response, handlerMethod);


11. spring-webmvc/src/main/java/org/springframework/web/servlet/mvc/method/annotation/RequestMappingHandlerAdapter.java （ 这里对应的图上 - 具备了返回值的处理功能并且能够处理@ResponseStatus注解 ）
        // 创建ServletInvocableHandlerMethod对象，并设置其相关属性，实际的请求处理就是通过此对象来完成的,参数绑定、处理请求以及返回值处理都在里边完成
        ServletInvocableHandlerMethod invocableMethod = createInvocableHandlerMethod(handlerMethod);



















